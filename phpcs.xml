<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="RealWorld" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="vendor/squizlabs/php_codesniffer/phpcs.xsd">
    <arg name="colors" />
    <arg name="extensions" value="php" />
    <file>src/</file>
    <rule ref="PSR1" />
    <rule ref="PSR12" />


    <description>Created with the PHP Coding Standard Generator. http://edorian.github.com/php-coding-standard-generator/
    </description>
    <rule ref="Generic.CodeAnalysis.EmptyStatement" />
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop" />
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall" />
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer" />
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement" />
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier" />
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter" />
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod" />
    <rule ref="Generic.Commenting.Todo" />
    <rule ref="Generic.Commenting.Fixme" />
    <rule ref="Generic.ControlStructures.InlineControlStructure" />
    <rule ref="Generic.Files.ByteOrderMark" />
    <rule ref="Generic.Files.LineEndings" />
    <rule ref="Generic.Files.LineLength" />
    <rule ref="Generic.Formatting.DisallowMultipleStatements" />
    <rule ref="Generic.Formatting.NoSpaceAfterCast" />
    <rule ref="Generic.Functions.CallTimePassByReference" />
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing" />
    <rule ref="Generic.Metrics.CyclomaticComplexity" />
    <rule ref="Generic.Metrics.NestingLevel" />
    <rule ref="Generic.NamingConventions.ConstructorName" />
    <rule ref="Generic.NamingConventions.UpperCaseConstantName" />
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName" />
    <rule ref="Generic.PHP.DeprecatedFunctions" />
    <rule ref="Generic.PHP.DisallowShortOpenTag" />
    <rule ref="Generic.PHP.ForbiddenFunctions" />
    <rule ref="Generic.PHP.LowerCaseConstant" />
    <rule ref="Generic.PHP.NoSilencedErrors" />
    <rule ref="Generic.Strings.UnnecessaryStringConcat" />
    <rule ref="Generic.WhiteSpace.DisallowTabIndent" />
    <rule ref="Generic.WhiteSpace.ScopeIndent" />
    <rule ref="MySource.PHP.EvalObjectFactory" />
    <rule ref="MySource.PHP.GetRequestData" />
    <rule ref="MySource.PHP.AjaxNullComparison" />
    <rule ref="PEAR.Classes.ClassDeclaration" />
    <rule ref="PEAR.Commenting.InlineComment" />
    <rule ref="PSR1.Classes.ClassDeclaration" />
    <rule ref="PSR1.Files.SideEffects" />
    <rule ref="Squiz.PHP.CommentedOutCode" />
    <rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops" />
    <rule ref="Squiz.PHP.DiscouragedFunctions">
        <properties>
            <property name="error" value="true" />
        </properties>
    </rule>
    <rule ref="Squiz.PHP.Eval" />
    <rule ref="Squiz.PHP.GlobalKeyword" />
    <rule ref="Squiz.PHP.Heredoc" />
    <rule ref="Squiz.PHP.InnerFunctions" />
    <rule ref="Squiz.PHP.LowercasePHPFunctions" />
    <rule ref="Squiz.PHP.NonExecutableCode" />
    <rule ref="Squiz.Scope.MemberVarScope" />
    <rule ref="Squiz.Scope.MethodScope" />
    <rule ref="Squiz.Scope.StaticThisUsage" />
    <rule ref="Squiz.WhiteSpace.MemberVarSpacing" />
    <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing" />
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing" />
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses" />


    <!-- For Laravel migrations -->
    <rule ref="PSR1.Classes.ClassDeclaration.MissingNamespace">
        <exclude-pattern>*/database/migrations/*</exclude-pattern>
    </rule>
</ruleset>
